"""
–ú–æ–¥—É–ª—å –¥–ª—è –≤—ã–≤–æ–¥–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–∞–∫–µ—Ç–∞—Ö —Å –ø–æ–º–æ—â—å—é —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –ø–∞–∫–µ—Ç–Ω—ã—Ö –º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤.

–§—É–Ω–∫—Ü–∏–∏:
- show_package(package_names): –í—ã–≤–æ–¥–∏—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —É–∫–∞–∑–∞–Ω–Ω—ã—Ö –ø–∞–∫–µ—Ç–∞—Ö.
"""

from .utils import process_packages, detect_package_managers


def show_package(package_names):
    """–í—ã–≤–æ–¥–∏—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —É–∫–∞–∑–∞–Ω–Ω—ã—Ö –ø–∞–∫–µ—Ç–∞—Ö —Å –ø–æ–º–æ—â—å—é –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø–∞–∫–µ—Ç–Ω—ã—Ö –º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤.

    Args:
        package_names (list): –°–ø–∏—Å–æ–∫ –∏–º–µ–Ω –ø–∞–∫–µ—Ç–æ–≤ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏.

    Returns:
        None
    """
    package_managers = detect_package_managers()

    if not package_managers:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –¥–æ—Å—Ç—É–ø–Ω—ã–µ –ø–∞–∫–µ—Ç–Ω—ã–µ –º–µ–Ω–µ–¥–∂–µ—Ä—ã.")
        return

    # –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Å–æ–ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è –ø–∞–∫–µ—Ç–Ω—ã—Ö –º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤ —Å –∏—Ö –∫–æ–º–∞–Ω–¥–∞–º–∏
    show_commands = {
        "epm": ["epm", "-ql"],
        # "flatpak": ["flatpak", "info"],
        "snap": ["snap", "info"],
        "paru": ["paru", "-Qi"],
        "yay": ["yay", "-Qi"],
        "dnf": ["dnf", "info"],
        "pacman": ["pacman", "-Qi"],
        "apk": ["apk", "info"],
        "xbps": ["xbps-install", "-Qi"],
        "apt": ["apt", "show"],
        "apt-get": ["apt-get", "show"],
    }

    for manager in package_managers:
        if manager in show_commands:
            try:
                print(f"üìã –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–∞–∫–µ—Ç–∞—Ö —Å –ø–æ–º–æ—â—å—é {manager}...\n")
                process_packages(
                    show_commands[manager], package_names, "üìã –°–æ–∑–¥–∞–µ–º —Å–≤–æ–¥–∫—É –æ –ø–∞–∫–µ—Ç–µ:"
                )
            except RuntimeError as e:
                print(
                    f"\n‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–∞–∫–µ—Ç–∞—Ö –¥–ª—è {manager}: {e}"
                )
